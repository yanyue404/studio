(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{359:function(v,_,l){"use strict";l.r(_);var i=l(25),t=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"面试手册"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#面试手册"}},[v._v("#")]),v._v(" 面试手册")]),v._v(" "),_("p",[_("strong",[v._v("简历")])]),v._v(" "),_("ol",[_("li",[_("p",[v._v("大厂简历筛选有一套机制，有大厂经历或学历好或经验匹配的会比较容易通过筛选，缺少光环的需要有其他东西来证明，比如优秀的项目经历，参与过好的开源项目等")])]),v._v(" "),_("li",[_("p",[v._v("简历上描述的技术/内容/项目确保自己是真的熟悉/掌握，看看每个技能是不是自己真的掌握了，能说出个 1.2.3；每个项目是否自己能说清楚，一些细节是否了解，有哪些复盘点，是否有改进空间")])]),v._v(" "),_("li",[_("p",[v._v("简历上描述的应该是与目标岗位直接/间接相关的，其他的比较优秀的点可以一笔带过，不需要花大篇幅介绍这些与目标岗位不符的能力")])]),v._v(" "),_("li",[_("p",[v._v("面试官简历评估时也会看跳槽频率，像 1 年 1 跳这种会被评为不稳定，这时除非学历/经历特别出色的，其他基本就不通过了")])])]),v._v(" "),_("p",[_("strong",[v._v("面试")])]),v._v(" "),_("ol",[_("li",[_("p",[v._v("面试除了技能/项目知识外，状态也很重要；接到面试电话说明简历评估通过了，时间可以你自己定，如果没准备好，可以把时间拉长些，给自己一些准备时间；要求当场面试的可以礼貌拒绝然后定一个合适的时间")])]),v._v(" "),_("li",[_("p",[v._v("对不同工作年限的同学会有不同的要求，校招主要看潜力，所以基础（计算机、网络）和算法会考得比较多；1~3 年除了潜力外还看经验是否与业务匹配，项目经验；3~5 年看是否有独挡一面的能力，需要在技术上有较好的深度，在做事情方面有自己的一套；大于 5 年的除了深度外对广度也有要求，且需要有跨端和架构设计的能力，对于管理岗位也会看带团队的能力")])]),v._v(" "),_("li",[_("p",[v._v("面试时遇到不会的不用慌，每个人的知识面不一样，碰到不会的很正常，但可以积极思考，首先坦诚表示没有了解过相关知识，然后以现有的知识体系思考下这个问题，说明思路，合理猜测结果")])]),v._v(" "),_("li",[_("p",[v._v("有时会有面试官会刻意施加压力，这时不在于问题回答的是否正确，而在于是否能在这些压力下仍然能够理性思考，面对面试官的每个问题，可以尝试想下面试官问这个问题的背后目的是什么")])])]),v._v(" "),_("h2",{attrs:{id:"面试要点解析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#面试要点解析"}},[v._v("#")]),v._v(" 面试要点解析")]),v._v(" "),_("h3",{attrs:{id:"前端基础"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端基础"}},[v._v("#")]),v._v(" 前端基础")]),v._v(" "),_("p",[_("strong",[v._v("javascript")])]),v._v(" "),_("ul",[_("li",[v._v("原型链")]),v._v(" "),_("li",[v._v("继承")]),v._v(" "),_("li",[v._v("作用域")]),v._v(" "),_("li",[v._v("闭包")]),v._v(" "),_("li",[v._v("变量提升")]),v._v(" "),_("li",[v._v("this 的指向")]),v._v(" "),_("li",[v._v("立即执行函数")]),v._v(" "),_("li",[v._v("instanceof 原理")]),v._v(" "),_("li",[v._v("bind 的实现")]),v._v(" "),_("li",[v._v("apply 和 call")]),v._v(" "),_("li",[v._v("柯里化")]),v._v(" "),_("li",[v._v("v8 垃圾回收机制")]),v._v(" "),_("li",[v._v("浮点数精度")]),v._v(" "),_("li",[v._v("new 操作符")]),v._v(" "),_("li",[v._v("事件循环机制")]),v._v(" "),_("li",[v._v("promise 原理")]),v._v(" "),_("li",[v._v("generator 原理")])]),v._v(" "),_("p",[_("strong",[v._v("css")])]),v._v(" "),_("ul",[_("li",[v._v("盒子模型")]),v._v(" "),_("li",[v._v("CSS 选择器")]),v._v(" "),_("li",[v._v("BFC")]),v._v(" "),_("li",[v._v("position")]),v._v(" "),_("li",[v._v("flex 布局")]),v._v(" "),_("li",[v._v("css 优先级")]),v._v(" "),_("li",[v._v("双飞冀/圣杯布局")]),v._v(" "),_("li",[v._v("CSS3 新特性")]),v._v(" "),_("li",[v._v("CSS 样式隔离")]),v._v(" "),_("li",[v._v("CSS 性能优化")]),v._v(" "),_("li",[v._v("层叠上下文")]),v._v(" "),_("li",[v._v("div 居中")]),v._v(" "),_("li",[v._v("浮动")])]),v._v(" "),_("p",[_("strong",[v._v("html&浏览器")])]),v._v(" "),_("ul",[_("li",[v._v("行内元素、块级元素")]),v._v(" "),_("li",[v._v("跨标签页通信")]),v._v(" "),_("li",[v._v("history 和 hash 两种路由")]),v._v(" "),_("li",[v._v("DOM 树")]),v._v(" "),_("li",[v._v("事件模型")]),v._v(" "),_("li",[v._v("缓存策略")]),v._v(" "),_("li",[v._v("浏览器架构")]),v._v(" "),_("li",[v._v("浏览器工作原理")]),v._v(" "),_("li",[v._v("内存泄露")])]),v._v(" "),_("p",[_("strong",[v._v("性能")])]),v._v(" "),_("ul",[_("li",[v._v("前端性能优化指标 RAIL")]),v._v(" "),_("li",[v._v("前端性能优化手段")]),v._v(" "),_("li",[v._v("重排和重绘")]),v._v(" "),_("li",[v._v("白屏")]),v._v(" "),_("li",[v._v("大量图片加载优化")]),v._v(" "),_("li",[v._v("描述下浏览器从输入网址到页面展现的整个过程")]),v._v(" "),_("li",[v._v("动画性能")]),v._v(" "),_("li",[v._v("渲染合成层")])]),v._v(" "),_("p",[_("strong",[v._v("工程化")])]),v._v(" "),_("ul",[_("li",[v._v("模块化机制")]),v._v(" "),_("li",[v._v("tree shaking")]),v._v(" "),_("li",[v._v("uglify 原理")]),v._v(" "),_("li",[v._v("babel 原理")]),v._v(" "),_("li",[v._v("webpack 工作流程")]),v._v(" "),_("li",[v._v("webpack 插件机制")]),v._v(" "),_("li",[v._v("webpack loader 机制")]),v._v(" "),_("li",[v._v("前端微服务")])]),v._v(" "),_("h3",{attrs:{id:"框架"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#框架"}},[v._v("#")]),v._v(" 框架")]),v._v(" "),_("p",[_("strong",[v._v("React")])]),v._v(" "),_("ul",[_("li",[v._v("合成事件")]),v._v(" "),_("li",[v._v("virtual dom")]),v._v(" "),_("li",[v._v("setState 过程")]),v._v(" "),_("li",[v._v("fiber")]),v._v(" "),_("li",[v._v("高阶组件")]),v._v(" "),_("li",[v._v("错误处理")]),v._v(" "),_("li",[v._v("性能优化")])]),v._v(" "),_("p",[_("strong",[v._v("Redux")])]),v._v(" "),_("ul",[_("li",[v._v("redux 核心原则")]),v._v(" "),_("li",[v._v("redux 核心逻辑")])]),v._v(" "),_("p",[_("strong",[v._v("Vue")])]),v._v(" "),_("ul",[_("li",[v._v("数据绑定原理")]),v._v(" "),_("li",[v._v("computed 和 watch")]),v._v(" "),_("li",[v._v("slot")]),v._v(" "),_("li",[v._v("next tick 原理")]),v._v(" "),_("li",[v._v("keep alive")])]),v._v(" "),_("h3",{attrs:{id:"算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[v._v("#")]),v._v(" 算法")]),v._v(" "),_("p",[_("strong",[v._v("算法")])]),v._v(" "),_("ul",[_("li",[v._v("动态规划：斐波那契数列 ok")]),v._v(" "),_("li",[v._v("数组：合并二维有序数组成一维有序数组 ok")]),v._v(" "),_("li",[v._v("链表：反转链表")]),v._v(" "),_("li",[v._v("链表：链表有环")]),v._v(" "),_("li",[v._v("堆栈队列：判断括号字符串是否有效 ok")]),v._v(" "),_("li",[v._v("返回数组中第 k 个最大元素 ing")]),v._v(" "),_("li",[v._v("找出数组中和为 sum 的 n 个数 ing")]),v._v(" "),_("li",[v._v("贪心：具有给定数值的最小字符串 ok")]),v._v(" "),_("li",[v._v("二叉树：最大深度")]),v._v(" "),_("li",[v._v("二叉树：层次遍历")]),v._v(" "),_("li",[v._v("剪枝：判断数独是否有效")]),v._v(" "),_("li",[v._v("二分查找：求解平方根")]),v._v(" "),_("li",[v._v("字典树：实现一个字典树")]),v._v(" "),_("li",[v._v("动态规划：爬楼梯问题 ok")]),v._v(" "),_("li",[v._v("动态规划：最短距离")]),v._v(" "),_("li",[v._v("数据结构：LRU 缓存")]),v._v(" "),_("li",[v._v("翻转二叉树")])]),v._v(" "),_("p",[_("strong",[v._v("编程题")])]),v._v(" "),_("ul",[_("li",[v._v("实现一个 trim 方法")]),v._v(" "),_("li",[v._v("实现一个 deepClone 方法")]),v._v(" "),_("li",[v._v("实现 add(1)(2)(3)")]),v._v(" "),_("li",[v._v("大数相加")]),v._v(" "),_("li",[v._v("拍平数组")]),v._v(" "),_("li",[v._v("实现防抖函数")]),v._v(" "),_("li",[v._v("实现节流函数")]),v._v(" "),_("li",[v._v("实现字符串翻转")]),v._v(" "),_("li",[v._v("数组去重")]),v._v(" "),_("li",[v._v("实现千位分隔符")]),v._v(" "),_("li",[v._v("判断是否是回文数")]),v._v(" "),_("li",[v._v("实现一个模板引擎")]),v._v(" "),_("li",[v._v("判断一个数是否是素数")]),v._v(" "),_("li",[v._v("获取 n 以内所有的素数")])]),v._v(" "),_("h3",{attrs:{id:"基础"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[v._v("#")]),v._v(" 基础")]),v._v(" "),_("p",[_("strong",[v._v("操作系统")])]),v._v(" "),_("ul",[_("li",[v._v("进程和线程")]),v._v(" "),_("li",[v._v("进程通信")]),v._v(" "),_("li",[v._v("进程调度策略")]),v._v(" "),_("li",[v._v("死锁")]),v._v(" "),_("li",[v._v("IO 多路复用")])]),v._v(" "),_("p",[_("strong",[v._v("网络")])]),v._v(" "),_("ul",[_("li",[v._v("七层网络模型")]),v._v(" "),_("li",[v._v("http")]),v._v(" "),_("li",[v._v("https")]),v._v(" "),_("li",[v._v("http2.0")]),v._v(" "),_("li",[v._v("http3.0")]),v._v(" "),_("li",[v._v("websocket")]),v._v(" "),_("li",[v._v("tcp")]),v._v(" "),_("li",[v._v("udp")])]),v._v(" "),_("h3",{attrs:{id:"大前端"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#大前端"}},[v._v("#")]),v._v(" 大前端")]),v._v(" "),_("p",[_("strong",[v._v("Node")])]),v._v(" "),_("ul",[_("li",[v._v("模块机制")]),v._v(" "),_("li",[v._v("require 原理")]),v._v(" "),_("li",[v._v("事件循环")]),v._v(" "),_("li",[v._v("cluster 原理")]),v._v(" "),_("li",[v._v("流机制")]),v._v(" "),_("li",[v._v("pipe 原理")]),v._v(" "),_("li",[v._v("守护进程")]),v._v(" "),_("li",[v._v("进程通信")]),v._v(" "),_("li",[v._v("异常处理")])]),v._v(" "),_("h3",{attrs:{id:"其他"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[v._v("#")]),v._v(" 其他")]),v._v(" "),_("p",[_("strong",[v._v("设计架构")])]),v._v(" "),_("ul",[_("li",[v._v("常用设计模式")]),v._v(" "),_("li",[v._v("重构")]),v._v(" "),_("li",[v._v("MVVM")]),v._v(" "),_("li",[v._v("MVC")]),v._v(" "),_("li",[v._v("MVP")])]),v._v(" "),_("p",[_("strong",[v._v("开放问题")])]),v._v(" "),_("ul",[_("li",[v._v("最近看的书")]),v._v(" "),_("li",[v._v("平常的学习途径")]),v._v(" "),_("li",[v._v("你比较擅长哪一块，不足的地方在哪里")])]),v._v(" "),_("h2",{attrs:{id:"模拟题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模拟题"}},[v._v("#")]),v._v(" 模拟题")]),v._v(" "),_("p",[_("strong",[v._v("（一）")])]),v._v(" "),_("ul",[_("li",[v._v("react setState 是同步还是异步")]),v._v(" "),_("li",[v._v("什么是高阶组件，请举例说明")]),v._v(" "),_("li",[v._v("解释一下原型链")]),v._v(" "),_("li",[v._v("instanceof 原理")]),v._v(" "),_("li",[v._v("apply 和 call 的作用及区别")]),v._v(" "),_("li",[v._v("position 有哪些值，作用分别是什么")]),v._v(" "),_("li",[v._v("说下你对 DOM 树的理解")]),v._v(" "),_("li",[v._v("重排和重绘是什么，有什么区别")]),v._v(" "),_("li",[v._v("https 加密过程是怎样的")]),v._v(" "),_("li",[v._v("实现 add(1)(2)(3)")])]),v._v(" "),_("p",[_("strong",[v._v("（二）")])]),v._v(" "),_("ul",[_("li",[v._v("react 为什么需要合成事件")]),v._v(" "),_("li",[v._v("为什么有时 react 两次 setState，只执行一次")]),v._v(" "),_("li",[v._v("redux 有哪些原则")]),v._v(" "),_("li",[v._v("es5 实现继承")]),v._v(" "),_("li",[v._v("实现一个 promise")]),v._v(" "),_("li",[v._v("CSS 选择器有哪些")]),v._v(" "),_("li",[v._v("说下事件模型")]),v._v(" "),_("li",[v._v("如何减少白屏的时间")]),v._v(" "),_("li",[v._v("3 次握手过程")]),v._v(" "),_("li",[v._v("判断链表是否有环")])]),v._v(" "),_("p",[_("strong",[v._v("（三）")])]),v._v(" "),_("ul",[_("li",[v._v("react 合成事件是什么，和原生事件的区别")]),v._v(" "),_("li",[v._v("react 如何处理异常")]),v._v(" "),_("li",[v._v("闭包的作用和原理")]),v._v(" "),_("li",[v._v("0.1+0.2 为什么不等于 0.3")]),v._v(" "),_("li",[v._v("什么是 BFC，BFC 有什么作用，如何形成 BFC")]),v._v(" "),_("li",[v._v("浏览器缓存策略是怎样的")]),v._v(" "),_("li",[v._v("你知道的前端性能优化手段有哪些")]),v._v(" "),_("li",[v._v("前端模块化机制有哪些")]),v._v(" "),_("li",[v._v("http2.0 做了哪些改进")]),v._v(" "),_("li",[v._v("求解平方根")])]),v._v(" "),_("p",[_("strong",[v._v("（四）")])]),v._v(" "),_("ul",[_("li",[v._v("react 为什么需要 fiber")]),v._v(" "),_("li",[v._v("redux 中间件机制")]),v._v(" "),_("li",[v._v("bind 的实现")]),v._v(" "),_("li",[v._v("说下 generator 原理")]),v._v(" "),_("li",[v._v("flex 布局有什么好处")]),v._v(" "),_("li",[v._v("如何定位内存泄露")]),v._v(" "),_("li",[v._v("渲染合成层是什么")]),v._v(" "),_("li",[v._v("babel 是什么，怎么做到的")]),v._v(" "),_("li",[v._v("http2.0 有哪些不足，http3.0 是什么")]),v._v(" "),_("li",[v._v("实现一个发布订阅模式")])]),v._v(" "),_("p",[_("strong",[v._v("（五）")])]),v._v(" "),_("ul",[_("li",[v._v("vue 的数据绑定机制是如何实现的")]),v._v(" "),_("li",[v._v("vue next tick 实现原理")]),v._v(" "),_("li",[v._v("谈谈变量提升")]),v._v(" "),_("li",[v._v("new 操作符具体做了什么")]),v._v(" "),_("li",[v._v("介绍下盒子模型")]),v._v(" "),_("li",[v._v("有哪些方式可以使 div 居中")]),v._v(" "),_("li",[v._v("有听过前端性能优化指标 RAIL 吗")]),v._v(" "),_("li",[v._v("进程和线程的区别")]),v._v(" "),_("li",[v._v("tcp 滑动窗口是什么")]),v._v(" "),_("li",[v._v("实现一个斐波那契数列")])]),v._v(" "),_("p",[_("strong",[v._v("（六）")])]),v._v(" "),_("ul",[_("li",[v._v("vue 的 computed 和 watch 的区别")]),v._v(" "),_("li",[v._v("说下 vue 的 keep alive")]),v._v(" "),_("li",[v._v("什么是立即执行函数")]),v._v(" "),_("li",[v._v("谈下事件循环机制")]),v._v(" "),_("li",[v._v("css 优先级是怎么计算的")]),v._v(" "),_("li",[v._v("CSS 相关的性能优化")]),v._v(" "),_("li",[v._v("谈下 webpack loader 机制")]),v._v(" "),_("li",[v._v("进程通信方式有哪些")]),v._v(" "),_("li",[v._v("爬楼梯问题")]),v._v(" "),_("li",[v._v("实现一个 trim 方法")])]),v._v(" "),_("p",[_("strong",[v._v("（七）")])]),v._v(" "),_("ul",[_("li",[v._v("react fiber 有哪些优点，怎样做到的")]),v._v(" "),_("li",[v._v("谈谈你对作用域的理解")]),v._v(" "),_("li",[v._v("双飞冀/圣杯布局")]),v._v(" "),_("li",[v._v("浮动元素会造成什么影响，如何清除浮动")]),v._v(" "),_("li",[v._v("网站首页有大量的图片，加载很慢，如何去优化呢？")]),v._v(" "),_("li",[v._v("描述下浏览器从输入网址到页面展现的整个过程")]),v._v(" "),_("li",[v._v("uglify 原理的是什么")]),v._v(" "),_("li",[v._v("tcp 重试机制")]),v._v(" "),_("li",[v._v("层次遍历二叉树")]),v._v(" "),_("li",[v._v("实现节流函数")])]),v._v(" "),_("p",[_("strong",[v._v("（八）")])]),v._v(" "),_("ul",[_("li",[v._v("react 有哪些性能优化的点")]),v._v(" "),_("li",[v._v("v8 垃圾回收机制")]),v._v(" "),_("li",[v._v("CSS 样式隔离手段")]),v._v(" "),_("li",[v._v("行内元素、块级元素有哪些，区别是什么")]),v._v(" "),_("li",[v._v("聊下你知道的浏览器架构")]),v._v(" "),_("li",[v._v("是否有写过 webpack 插件")]),v._v(" "),_("li",[v._v("websocket 建立过程")]),v._v(" "),_("li",[v._v("合并二维有序数组成一维有序数组")]),v._v(" "),_("li",[v._v("实现防抖函数")]),v._v(" "),_("li",[v._v("最近看了什么书，有什么心得")])]),v._v(" "),_("p",[_("strong",[v._v("（九）")])]),v._v(" "),_("ul",[_("li",[v._v("CSS3 有哪些新特性")]),v._v(" "),_("li",[v._v("层叠上下文是什么")]),v._v(" "),_("li",[v._v("history 和 hash 两种路由方式的最大区别是什么？")]),v._v(" "),_("li",[v._v("动画性能如何优化")]),v._v(" "),_("li",[v._v("tree shaking 是什么，有什么作用，原理是什么")]),v._v(" "),_("li",[v._v("webpack 工作流程是怎样的")]),v._v(" "),_("li",[v._v("什么场景下会用策略模式")]),v._v(" "),_("li",[v._v("找出数组中和为 sum 的 n 个数")]),v._v(" "),_("li",[v._v("判断括号字符串是否有效")]),v._v(" "),_("li",[v._v("平常的学习途径")])]),v._v(" "),_("p",[_("strong",[v._v("（十）")])]),v._v(" "),_("ul",[_("li",[v._v("node 模块机制是怎样的")]),v._v(" "),_("li",[v._v("node require 具体实现是什么")]),v._v(" "),_("li",[v._v("node 事件循环与浏览器的哪些不一样")]),v._v(" "),_("li",[v._v("cluster 原理是怎样的")]),v._v(" "),_("li",[v._v("pipe 原理是怎样的")]),v._v(" "),_("li",[v._v("node 的异常处理方式")]),v._v(" "),_("li",[v._v("适配器和外观模式的区别")]),v._v(" "),_("li",[v._v("重构的手段有哪些")]),v._v(" "),_("li",[v._v("数组去重")]),v._v(" "),_("li",[v._v("你比较擅长哪一块，不足的地方在哪里")])])])}),[],!1,null,null,null);_.default=t.exports}}]);